type Err = record {
  code : nat16;
  message : text;
};

type HistoryAction = variant {
  create;
  update;
  delete;
  restore;
};

type SocialLinkPlatform = variant {
  dscvr;
  openchat;
  taggr;
  x;
  github;
  dfinityforum;
  discord;
  website;
};

type SocialLink = record {
  platform : SocialLinkPlatform;
  username : text;
};

type UserConfig = variant {
  admin : record {
    bio : text;
  };
  reviewer : record {
    bio : text;
    neuron_id : nat64;
    wallet_address : text;
    social_links : vec SocialLink;
  };
  anonymous;
};

type GetMyUserProfileResponse = variant {
  ok : record {
    id : text;
    username : text;
    config : UserConfig;
  };
  err : Err;
};

type UserProfileHistoryEntry = record {
  username : text;
  config : UserConfig;
};

type GetMyUserProfileHistoryResponse = variant {
  ok : record {
    history : vec record {
      action : HistoryAction;
      date_time : text;
      user : principal;
      data : UserProfileHistoryEntry;
    };
  };
  err : Err;
};

type CreateMyUserProfileResponse = variant {
  ok : record {
    id : text;
    username : text;
    config : UserConfig;
  };
  err : Err;
};

type MyUserConfigUpdate = variant {
  admin : record {
    bio : opt text;
  };
  reviewer : record {
    bio : opt text;
    wallet_address : opt text;
    social_links : opt vec SocialLink;
  };
  anonymous;
};

type UpdateMyUserProfileRequest = record {
  username : opt text;
  config : opt MyUserConfigUpdate;
};

type UpdateMyUserProfileResponse = variant {
  ok;
  err : Err;
};

type UserConfigUpdate = variant {
  admin : record {
    bio : opt text;
  };
  reviewer : record {
    bio : opt text;
    neuron_id : opt nat64;
    wallet_address : opt text;
    social_links : opt vec SocialLink;
  };
  anonymous;
};

type UpdateUserProfileRequest = record {
  user_id : text;
  username : opt text;
  config : opt UserConfigUpdate;
};

type UpdateUserProfileResponse = variant {
  ok;
  err : Err;
};

type NnsProposalTopic = variant {
  replica_version_management;
  system_canister_management;
};

type NervousSystem = variant {
  network : record {
    id : nat64;
    topic : NnsProposalTopic;
  };
};

type ReviewPeriodState = variant {
  in_progress;
  completed;
};

type Proposal = record {
  title : text;
  nervous_system : NervousSystem;
  state : ReviewPeriodState;
  proposed_at : text;
  proposed_by : nat64;
  synced_at : text;
  review_completed_at : opt text;
};

type ProposalResponse = record {
  id : text;
  proposal : Proposal;
};

type GetProposalResponse = variant {
  ok : ProposalResponse;
  err : Err;
};

type ListProposalsRequest = record {
  state : opt ReviewPeriodState;
};

type ListProposalsResponse = variant {
  ok : record {
    proposals : vec ProposalResponse;
  };
  err : Err;
};

type LogLevel = variant {
  info;
  warn;
  error;
};

type LogsFilterRequest = record {
  before_timestamp_ms : opt nat64;
  after_timestamp_ms : opt nat64;
  level : opt LogLevel;
  context_contains_any : opt vec text;
  message_contains_any : opt vec text;
};

type LogEntry = record {
  date_time : text;
  level : LogLevel;
  context : opt text;
  message : text;
};

type ListLogsResponse = variant {
  ok : record {
    logs : vec LogEntry;
  };
  err : Err;
};

type SyncProposalsResponse = variant {
  ok;
  err : Err;
};

type ProposalReviewStatus = variant {
  draft;
  published;
};

type ProposalReview = record {
  proposal_id : text;
  user_id : text;
  created_at : text;
  last_updated_at : opt text;
  status : ProposalReviewStatus;
  summary : text;
  review_duration_mins : nat16;
  build_reproduced : bool;
  reproduced_build_image_id : opt text;
};

type CreateProposalReviewRequest = record {
  proposal_id : text;
  summary : opt text;
  review_duration_mins : opt nat16;
  build_reproduced : opt bool;
  reproduced_build_image_id : opt text;
};

type CreateProposalReviewResponse = variant {
  ok : record {
    id : text;
    proposal_review : ProposalReview;
  };
  err : Err;
};

type UpdateProposalReviewRequest = record {
  proposal_id : text;
  status : opt ProposalReviewStatus;
  summary : opt text;
  review_duration_mins : opt nat16;
  build_reproduced : opt bool;
  reproduced_build_image_id : opt text;
};

type UpdateProposalReviewResponse = variant {
  ok;
  err : Err;
};

type ReviewCommitState = variant {
  reviewed : record {
    matches_description : opt bool;
    comment : opt text;
    highlights : vec text;
  };
  not_reviewed;
};

type ProposalReviewCommit = record {
  proposal_review_id : text;
  user_id : text;
  created_at : text;
  last_updated_at : opt text;
  commit_sha : text;
  state : ReviewCommitState;
};

type CreateProposalReviewCommitRequest = record {
  proposal_review_id : text;
  commit_sha : text;
  state : ReviewCommitState;
};

type CreateProposalReviewCommitResponse = variant {
  ok : record {
    id : text;
    proposal_review_commit : ProposalReviewCommit;
  };
  err : Err;
};

type UpdateProposalReviewCommitRequest = record {
  id : text;
  state : ReviewCommitState;
};

type UpdateProposalReviewCommitResponse = variant {
  ok;
  err : Err;
};

type DeleteProposalReviewCommitRequest = record {
  id : text;
};

type DeleteProposalReviewCommitResponse = variant {
  ok;
  err : Err;
};

service : {
  get_my_user_profile : () -> (GetMyUserProfileResponse) query;
  get_my_user_profile_history : () -> (GetMyUserProfileHistoryResponse) query;
  create_my_user_profile : () -> (CreateMyUserProfileResponse);
  update_my_user_profile : (UpdateMyUserProfileRequest) -> (UpdateMyUserProfileResponse);
  update_user_profile : (UpdateUserProfileRequest) -> (UpdateUserProfileResponse);
  list_proposals : (ListProposalsRequest) -> (ListProposalsResponse) query;
  list_logs : (LogsFilterRequest) -> (ListLogsResponse) query;
  sync_proposals : () -> (SyncProposalsResponse);
  create_proposal_review : (CreateProposalReviewRequest) -> (CreateProposalReviewResponse);
  update_proposal_review : (UpdateProposalReviewRequest) -> (UpdateProposalReviewResponse);
  create_proposal_review_commit : (CreateProposalReviewCommitRequest) -> (CreateProposalReviewCommitResponse);
  update_proposal_review_commit : (UpdateProposalReviewCommitRequest) -> (UpdateProposalReviewCommitResponse);
  delete_proposal_review_commit : (DeleteProposalReviewCommitRequest) -> (DeleteProposalReviewCommitResponse);
};
