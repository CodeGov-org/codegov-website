type Err = record {
  code : nat16;
  message : text;
};

type HistoryAction = variant {
  create;
  update;
  delete;
  restore;
};

type UserConfig = variant {
  admin : record {
    bio : text;
  };
  reviewer : record {
    bio : text;
    neuron_id : nat64;
    wallet_address : text;
  };
  anonymous;
};

type GetMyUserProfileResponse = variant {
  ok : record {
    id : text;
    username : text;
    config : UserConfig;
  };
  err : Err;
};

type UserProfileHistoryEntry = record {
  username : text;
  config : UserConfig;
};

type GetMyUserProfileHistoryResponse = variant {
  ok : record {
    history : vec record {
      action : HistoryAction;
      date_time : text;
      user : principal;
      data : UserProfileHistoryEntry;
    };
  };
  err : Err;
};

type CreateMyUserProfileResponse = variant {
  ok : record {
    id : text;
    username : text;
    config : UserConfig;
  };
  err : Err;
};

service : {
  get_my_user_profile : () -> (GetMyUserProfileResponse) query;
  get_my_user_profile_history : () -> (GetMyUserProfileHistoryResponse) query;
  create_my_user_profile : () -> (CreateMyUserProfileResponse);
};
